<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.melloware</groupId>
	<artifactId>quarkus-monorepo</artifactId>
	<version>2.0.0</version>
	<name>Quarkus Monorepo</name>
	<description>Quarkus monorepo demonstrating Panache REST server with PrimeReact UI client</description>
	<url>https://github.com/melloware/quarkus-monorepo</url>

	<properties>
		<quarkus.platform.version>2.13.3.Final</quarkus.platform.version>
		<surefire-plugin.version>3.0.0-M7</surefire-plugin.version>
		<compiler-plugin.version>3.10.1</compiler-plugin.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-bom</artifactId>
				<version>${quarkus.platform.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- Quarkus: -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-reactive-jackson</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm-panache</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-liquibase</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>

		<!-- Utilities: -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.24</version>
			<scope>provided</scope>
		</dependency>

		<!-- Testing: -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>3.1.0</version>
					<configuration>
						<executable>docker</executable>
						<workingDirectory>${project.basedir}</workingDirectory>
						<arguments>
							<argument>build</argument>
							<argument>-f</argument>
							<argument>src/main/docker/Dockerfile.jvm</argument>
							<argument>-t</argument>
							<argument>melloware/${project.artifactId}:latest</argument>
							<argument>.</argument>
						</arguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>1.12.1</version>
					<configuration>
						<nodeVersion>v18.8.0</nodeVersion>
						<npmVersion>8.19.1</npmVersion>
						<installDirectory>${project.basedir}/target/node</installDirectory>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<!-- the parameters=true option is critical so that RESTEasy works fine -->
					<parameters>true</parameters>
				</configuration>
			</plugin>
			<plugin>
				<!-- you need this specific version to integrate with the other build helpers -->
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
				</configuration>
			</plugin>
			<plugin>
				<!-- This is what injects the magic Quarkus bytecode -->
				<groupId>io.quarkus</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.platform.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>frontend</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.eirslett</groupId>
						<artifactId>frontend-maven-plugin</artifactId>
						<executions>
							<!-- Install node -->
							<execution>
								<id>install-node-and-npm</id>
								<goals>
									<goal>install-node-and-npm</goal>
								</goals>
								<phase>generate-resources</phase>
							</execution>
							<!-- Install dependencies -->
							<execution>
								<id>npm-install</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>install</arguments>
									<testFailureIgnore>true</testFailureIgnore>
								</configuration>
							</execution>
							<!-- Build code -->
							<execution>
								<id>build</id>
								<goals>
									<goal>npm</goal>
								</goals>
								<phase>generate-resources</phase>
								<configuration>
									<arguments>run build</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Optionally activate this profile to compile the demo into JVM docker image! -->
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- $ docker build -f src/main/docker/Dockerfile.jvm -t melloware/quarkus-monorepo:latest . -->
							<execution>
								<id>docker-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>build</argument>
										<argument>-f</argument>
										<argument>src/main/docker/Dockerfile.jvm</argument>
										<argument>-t</argument>
										<argument>melloware/${project.artifactId}:latest</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Optionally activate this profile to compile the demo into native! -->
			<id>native</id>
			<activation>
				<property>
					<name>native</name>
				</property>
			</activation>
			<properties>
				<quarkus.package.type>native</quarkus.package.type>
				<quarkus.native.container-build>true</quarkus.native.container-build>
				<quarkus.native.builder-image>mandrel</quarkus.native.builder-image>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- $ docker build -f src/main/docker/Dockerfile.native -t melloware/quarkus-monorepo:version . -->
							<execution>
								<id>docker-build</id>
								<phase>package</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<arguments>
										<argument>build</argument>
										<argument>-f</argument>
										<argument>src/main/docker/Dockerfile.native</argument>
										<argument>-t</argument>
										<argument>melloware/${project.artifactId}:${project.version}</argument>
										<argument>.</argument>
									</arguments>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
